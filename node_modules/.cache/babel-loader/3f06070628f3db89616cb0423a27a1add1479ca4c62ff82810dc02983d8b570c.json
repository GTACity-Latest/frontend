{"ast":null,"code":"import { mapGetters, mapMutations } from \"vuex\";\nimport menuButton from \"./menuButton.vue\";\nexport default {\n  data: function () {\n    return {\n      navItems: [\"Reports\", \"Players\", \"ESP\", \"Bans\"],\n      browsingType: \"Reports\",\n      espTracer: this.$store.state.admin.espTracer,\n      espBox: this.$store.state.admin.espBox,\n      espTags: this.$store.state.admin.espTags,\n      espSkel: this.$store.state.admin.espSkel\n    };\n  },\n  components: {\n    menuButton\n  },\n  methods: {\n    close: function () {\n      if (window.mp) {\n        window.mp.trigger(\"closeRoute\");\n      }\n    },\n    clickHandler(action, rid) {\n      if (window.mp) {\n        window.mp.trigger(\"sendReport\", rid, action);\n      }\n    },\n    ...mapMutations([\"addReport\"]),\n    formatUnixTimestamp(unixTimestamp) {\n      let date = new Date(unixTimestamp * 1000);\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let seconds = date.getSeconds();\n      return `${hours}:${minutes}:${seconds}`;\n    }\n  },\n  watch: {\n    // eslint-disable-next-line\n    espTracer(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espTracer\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espTracer\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espBox(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espBox\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espBox\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espTags(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espTags\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espTags\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espSkel(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espSkel\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espSkel\", oldType);\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      reports: \"reportsList\"\n    })\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","menuButton","data","navItems","browsingType","espTracer","$store","state","admin","espBox","espTags","espSkel","components","methods","close","window","mp","trigger","clickHandler","action","rid","formatUnixTimestamp","unixTimestamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","watch","oldType","newType","commit","prop","val","computed","reports"],"sources":["src/components/reportMenu.vue"],"sourcesContent":["<template>\n    <div id=\"report-system\" style=\"user-select: none;\">\n        <div id=\"header\" style=\"user-select: none;\">\n        <div class=\"container-login100\">\n            <div class=\"popup2\">\n                <menu-button style=\"position:absolute; margin-left:38.2vw;\"></menu-button>\n                <div class=\"navBaseReports\">\n                <ul v-for=\"navI in navItems\" :key=\"navI\">\n                  <li class=\"hNav\"><b @click=\"browsingType=navI\">{{ navI }}</b></li>\n                </ul>\n              </div>\n                <div class=\"head1\"><a style=\"    color: rgb(201 0 0);\">{{browsingType}}</a>\n                  <table>\n                    <tr>\n                    </tr>\n                    </table>\n                </div>\n                <div class=\"systemCluster\" style=\"overflow:scroll; height:16vw; overflow-x: hidden; margin-top: 1vw;\">\n                  <table v-if=\"browsingType==='Reports'\" class=\"tableOne\" cellspacing=\"2\">\n                    <tr>\n                      <th style=\"max-width: 5vw;\"><i class=\"fa-solid fa-id-card-clip\"></i>   ID</th>\n                      <th style=\"max-width: 5vw;\"><i class=\"fa-solid fa-clock\"></i>  Time Created</th>\n                      <th><i class=\"fa-solid fa-book\"></i>   Description</th>\n                      <th><i class=\"fas fa-tasks\"></i>   Action</th>\n                    </tr>\n                    <tr v-for=\"report in reports\" :key=\"report.id\">\n                      <td>{{ report.id }}</td>\n                      <td>{{ formatUnixTimestamp(report.time) }}</td>\n                      <td>{{ report.desc }}</td>\n                      <td>\n                        <button class=\"actionBtn btnAccept\" type=\"button\" @click=\"clickHandler(report.id, 'open')\"><i class=\"fa-solid fa-circle-check\"></i></button>\n                          <button class=\"actionBtn btnTeleport\" type=\"button\" @click=\"clickHandler(report.id, 'teleport')\"><i class=\"fa-solid fa-share-from-square\"></i></button>\n                            <button class=\"actionBtn btnSpec\" type=\"button\" @click=\"clickHandler(report.id, 'spectate')\"><i class=\"fa-solid fa-eye\"></i></button>\n                            <button class=\"actionBtn btnClose\" type=\"button\" @click=\"clickHandler(report.id, 'close')\"><i class=\"fa-solid fa-circle-xmark\"></i></button>\n                        </td>\n                       </tr>\n                    </table>\n                    <div v-if=\"browsingType==='ESP'\" class=\"sectionContainer\">\n                      <label class=\"switch toggle\">\n                        <div class=\"textOne\">Tracers</div>\n                        <input class=\"toggle\" type=\"checkbox\" checked v-model=\"espTracer\">\n                        <span class=\"slider round\"></span>\n                      </label>\n                      <label class=\"switch toggle\" style=\"margin-top: 3vw;\">\n                        <div class=\"textOne\">Skeletons</div>\n                        <input class=\"toggle\" type=\"checkbox\" checked v-model=\"espSkel\">\n                        <span class=\"slider round\"></span>\n                      </label>\n                      <label class=\"switch toggle\" style=\"margin-top: 6vw;\">\n                        <div class=\"textOne\">Boxes</div>\n                        <input class=\"toggle\" type=\"checkbox\" checked v-model=\"espBox\">\n                        <span class=\"slider round\"></span>\n                      </label>\n                      <label class=\"switch toggle\" style=\"margin-top: 9vw;\">\n                        <div class=\"textOne\" style=\"margin\">Nametags</div>\n                        <input class=\"toggle\" type=\"checkbox\" checked v-model=\"espTags\">\n                        <span class=\"slider round\"></span>\n                      </label>\n                    </div>\n                  </div>\n            </div>\n            </div>\n            </div>\n            </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from \"vuex\";\nimport menuButton from \"./menuButton.vue\";\n\nexport default {\n  data: function() {\n    return {\n      navItems: [\"Reports\", \"Players\", \"ESP\", \"Bans\"],\n      browsingType: \"Reports\",\n      espTracer: this.$store.state.admin.espTracer,\n      espBox: this.$store.state.admin.espBox,\n      espTags: this.$store.state.admin.espTags,\n      espSkel: this.$store.state.admin.espSkel\n    };\n  },\n  components: {\n    menuButton\n  },\n  methods: {\n    close: function() {\n      if (window.mp) {\n        window.mp.trigger(\"closeRoute\");\n      }\n    },\n    clickHandler(action, rid) {\n      if (window.mp) {\n        window.mp.trigger(\"sendReport\", rid, action);\n      }\n    },\n    ...mapMutations([\"addReport\"]),\n    formatUnixTimestamp(unixTimestamp) {\n      let date = new Date(unixTimestamp * 1000);\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let seconds = date.getSeconds();\n      return `${hours}:${minutes}:${seconds}`;\n    }\n  },\n  watch: {\n    // eslint-disable-next-line\n    espTracer(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espTracer\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espTracer\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espBox(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espBox\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espBox\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espTags(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espTags\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espTags\", oldType);\n      }\n    },\n    // eslint-disable-next-line\n    espSkel(oldType, newType) {\n      this.$store.commit(\"changeESP\", {\n        prop: \"espSkel\",\n        val: oldType\n      });\n      if (window.mp) {\n        window.mp.trigger(\"setPlayerProperty\", \"espSkel\", oldType);\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      reports: \"reportsList\"\n    })\n  }\n};\n</script>\n\n\n<style scoped>\n.navBaseReports {\n  opacity: 1;\n  width: 7vw;\n  height: 15vw;\n  border-radius: 15px;\n  /*background-color: rgba(0, 0, 0, 0.85);*/\n  color: rgba(10, 10, 10, 0.644);\n  background: -webkit-linear-gradient(\n    right,\n    rgba(10, 10, 10, 0.944),\n    rgba(1, 1, 1, 0.651)\n  );\n  margin-left: -0.6vw;\n  --notchSize: 20px;\n  position: absolute;\n  text-align: center;\n}\n\n.hNav {\n    padding: 4px 0px;\n    display: block;\n    border-bottom: 1px solid gray;\n    color: #ffffff;\n    background: #414141;\n    text-decoration: none;\n    font-size: 1vw;\n    line-height: 50px;\n    line-height: 1.5em;\n    text-transform: normal;\n    letter-spacing: normal;\n    list-style-type: none;\n    transition: 0.1s;\n}\n\n.hNav:hover {\n  background: #202020;\n}\n\n* {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n/*rgba(210, 133, 255, 0.822)     border-radius: 0px 0px 5px 5px;\n*/\n\n.systemCluster {\n  border-bottom: none;\n}\n\n/* width */\n::-webkit-scrollbar {\n  width: 5px;\n  position: relative;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background: rgba(10, 10, 10, 0);\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: rgb(181, 52, 52);\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #838383;\n}\n\n.popup2 {\n  opacity: 1;\n  width: 40vw;\n  border-radius: 11px;\n  height: 15vw;\n  /*background-color: rgba(0, 0, 0, 0.85);*/\n  color: rgba(10, 10, 10, 0.644);\n  background: -webkit-linear-gradient(\n    right,\n    rgba(10, 10, 10, 1),\n    rgba(1, 1, 1, 0.851)\n  );\n  backdrop-filter: blur(20px);\n\n  --notchSize: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 25vw;\n  overflow-y: hidden;\n  overflow-x: hidden; /* Hide horizontal scrollbar */\n\n  background-color: #000000ec;\n  background-image: url(\"./auth/assets/image/diagmonds.png\");\n}\n\n#moveablediv {\n  position: absolute;\n  resize: both;\n}\n\n.tableOne {\n  width: 100%;\n  width: 30vw;\n  margin-left: 7.6vw;\n  font-family: Myriad Pro, Segoe UI, Verdana, sans-serif;\n  background: -webkit-linear-gradient(\n    right,\n    rgba(10, 10, 10, 1),\n    rgba(1, 1, 1, 0.851)\n  );\n  backdrop-filter: blur(20px);\n  border-right: solid rgba(255, 255, 255, 0.311) 2px;\n  border-left: solid rgba(255, 255, 255, 0.311) 2px;\n}\n\n.sectionContainer {\n  width: 100%;\n  width: 30vw;\n  margin-left: 7.6vw;\n  font-family: Myriad Pro, Segoe UI, Verdana, sans-serif;\n}\n\nth {\n  background: -webkit-linear-gradient(right, #929292, #929292);\n  color: #000000;\n}\ntd {\n  text-align: center;\n  background-color: rgb(156, 156, 156);\n  font-weight: 650;\n  max-width: 20vw;\n  word-wrap: break-word;\n}\nh4 {\n  margin: auto;\n}\n\n.widthLimit {\n  max-width: 10px;\n}\n\n.head1 {\n  color: #fff;\n  /*font-family: 'OSL';*/\n  font-family: Poppins-Medium;\n  font-weight: 1000;\n  font-size: 0.7vw;\n  text-align: center;\n  margin-top: 0.5vw;\n  font-size: 25px;\n  line-height: 1vw;\n  margin-left: 4.3vw;\n}\n\n@keyframes fadeout {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\na::after {\n  display: block;\n  content: \"\";\n  width: 100%;\n  height: 0.2vw;\n  opacity: 0.5;\n  border-radius: 20px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n}\n\na {\n  position: relative;\n}\n\n.actionBtn {\n  background-color: rgba(0, 0, 0, 0);\n  transition: 0.2s;\n  font-size: 1vw;\n  line-height: 1vw;\n  margin-left: 5px;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-radius: 10px;\n}\n\n.btnAccept {\n  border-bottom: solid rgba(0, 255, 42, 0.678) 2px;\n}\n\n.btnClose {\n  border-bottom: solid rgba(255, 0, 0, 0.678) 2px;\n}\n\n.btnTeleport {\n  border-bottom: solid rgba(0, 187, 255, 0.678) 2px;\n}\n\n.btnSpec {\n  border-bottom: solid rgba(217, 91, 255, 0.678) 2px;\n}\n\n.switch {\n  position: absolute;\n  width: 60px;\n  height: 34px;\n}\n\n.switch input {\n  opacity: 1;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  background: rgb(255, 0, 0);\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: rgb(255, 255, 255);\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.toggle:checked + .slider {\n  background-color: #00ff2a;\n}\n\n.toggle:focus + .slider {\n  box-shadow: 0 0 1px #00ff2a;\n}\n\n.toggle:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.textOne {\n  color: #fff;\n  /*font-family: 'OSL';*/\n  font-family: \"OSL\";\n  font-family: Myriad Pro, Segoe UI, Verdana, sans-serif;\n  font-weight: 1000;\n  src: url(\"../assets/fonts/OSL.ttf\") format(\"truetype\");\n  font-size: 0.7vw;\n  text-align: center;\n  font-size: 10px;\n  line-height: 1vw;\n}\n</style>"],"mappings":"AAmEA,SAAAA,UAAA,EAAAC,YAAA;AACA,OAAAC,UAAA;AAEA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,QAAA;MACAC,YAAA;MACAC,SAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAH,SAAA;MACAI,MAAA,OAAAH,MAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAC,MAAA;MACAC,OAAA,OAAAJ,MAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAE,OAAA;MACAC,OAAA,OAAAL,MAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAG;IACA;EACA;EACAC,UAAA;IACAX;EACA;EACAY,OAAA;IACAC,KAAA,WAAAA,CAAA;MACA,IAAAC,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA;MACA;IACA;IACAC,aAAAC,MAAA,EAAAC,GAAA;MACA,IAAAL,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA,eAAAG,GAAA,EAAAD,MAAA;MACA;IACA;IACA,GAAAnB,YAAA;IACAqB,oBAAAC,aAAA;MACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,aAAA;MACA,IAAAG,KAAA,GAAAF,IAAA,CAAAG,QAAA;MACA,IAAAC,OAAA,GAAAJ,IAAA,CAAAK,UAAA;MACA,IAAAC,OAAA,GAAAN,IAAA,CAAAO,UAAA;MACA,UAAAL,KAAA,IAAAE,OAAA,IAAAE,OAAA;IACA;EACA;EACAE,KAAA;IACA;IACA1B,UAAA2B,OAAA,EAAAC,OAAA;MACA,KAAA3B,MAAA,CAAA4B,MAAA;QACAC,IAAA;QACAC,GAAA,EAAAJ;MACA;MACA,IAAAjB,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA,mCAAAe,OAAA;MACA;IACA;IACA;IACAvB,OAAAuB,OAAA,EAAAC,OAAA;MACA,KAAA3B,MAAA,CAAA4B,MAAA;QACAC,IAAA;QACAC,GAAA,EAAAJ;MACA;MACA,IAAAjB,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA,gCAAAe,OAAA;MACA;IACA;IACA;IACAtB,QAAAsB,OAAA,EAAAC,OAAA;MACA,KAAA3B,MAAA,CAAA4B,MAAA;QACAC,IAAA;QACAC,GAAA,EAAAJ;MACA;MACA,IAAAjB,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA,iCAAAe,OAAA;MACA;IACA;IACA;IACArB,QAAAqB,OAAA,EAAAC,OAAA;MACA,KAAA3B,MAAA,CAAA4B,MAAA;QACAC,IAAA;QACAC,GAAA,EAAAJ;MACA;MACA,IAAAjB,MAAA,CAAAC,EAAA;QACAD,MAAA,CAAAC,EAAA,CAAAC,OAAA,iCAAAe,OAAA;MACA;IACA;EACA;EACAK,QAAA;IACA,GAAAtC,UAAA;MACAuC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}